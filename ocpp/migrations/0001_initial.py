# Generated by Django 5.2.4 on 2025-08-07 23:16

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('accounts', '0001_initial'),
        ('references', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Simulator',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('cp_path', models.CharField(max_length=100)),
                ('host', models.CharField(default='127.0.0.1', max_length=100)),
                ('ws_port', models.IntegerField(default=8000)),
                ('rfid', models.CharField(default='FFFFFFFF', max_length=8)),
                ('interval', models.FloatField(default=5.0)),
                ('kwh_max', models.FloatField(default=60.0)),
                ('repeat', models.BooleanField(default=False)),
                ('username', models.CharField(blank=True, max_length=100)),
                ('password', models.CharField(blank=True, max_length=100)),
            ],
        ),
        migrations.CreateModel(
            name='Charger',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('charger_id', models.CharField(max_length=100, unique=True, verbose_name='Serial Number')),
                ('name', models.CharField(blank=True, max_length=200, verbose_name='Location Name')),
                ('config', models.JSONField(blank=True, default=dict)),
                ('require_rfid', models.BooleanField(default=False, verbose_name='Require RFID')),
                ('last_heartbeat', models.DateTimeField(blank=True, null=True)),
                ('last_meter_values', models.JSONField(blank=True, default=dict)),
                ('latitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True)),
                ('longitude', models.DecimalField(blank=True, decimal_places=6, max_digits=9, null=True)),
                ('last_path', models.CharField(blank=True, max_length=255)),
                ('reference', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='references.reference')),
            ],
        ),
        migrations.CreateModel(
            name='MeterReading',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('connector_id', models.IntegerField(blank=True, null=True)),
                ('transaction_id', models.BigIntegerField(blank=True, null=True)),
                ('timestamp', models.DateTimeField()),
                ('measurand', models.CharField(blank=True, max_length=100)),
                ('value', models.DecimalField(decimal_places=3, max_digits=12)),
                ('unit', models.CharField(blank=True, max_length=16)),
                ('charger', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='meter_readings', to='ocpp.charger')),
            ],
        ),
        migrations.CreateModel(
            name='Transaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('charger_id', models.CharField(max_length=100)),
                ('transaction_id', models.BigIntegerField()),
                ('meter_start', models.IntegerField(blank=True, null=True)),
                ('meter_stop', models.IntegerField(blank=True, null=True)),
                ('start_time', models.DateTimeField()),
                ('stop_time', models.DateTimeField(blank=True, null=True)),
                ('account', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='transactions', to='accounts.account')),
            ],
            options={
                'unique_together': {('charger_id', 'transaction_id')},
            },
        ),
    ]
