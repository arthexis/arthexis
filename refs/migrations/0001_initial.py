# Generated by Django 5.2.4 on 2025-08-23 03:30

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("contenttypes", "0002_remove_content_type_name"),
    ]

    operations = [
        migrations.CreateModel(
            name="Reference",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("is_seed_data", models.BooleanField(default=False, editable=False)),
                ("is_deleted", models.BooleanField(default=False, editable=False)),
                (
                    "content_type",
                    models.CharField(
                        choices=[("text", "Text"), ("image", "Image")],
                        default="text",
                        max_length=5,
                    ),
                ),
                (
                    "alt_text",
                    models.CharField(max_length=500, verbose_name="Title / Alt Text"),
                ),
                ("value", models.TextField(blank=True)),
                ("file", models.FileField(blank=True, upload_to="refs/")),
                ("image", models.ImageField(blank=True, upload_to="refs/qr/")),
                ("uses", models.PositiveIntegerField(default=0)),
                ("method", models.CharField(default="qr", max_length=50)),
                (
                    "include_in_footer",
                    models.BooleanField(
                        default=False, verbose_name="Include in Footer"
                    ),
                ),
                ("created", models.DateTimeField(auto_now_add=True)),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Tag",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("is_seed_data", models.BooleanField(default=False, editable=False)),
                ("is_deleted", models.BooleanField(default=False, editable=False)),
                ("name", models.CharField(max_length=50, unique=True)),
                ("slug", models.SlugField(blank=True, unique=True)),
            ],
            options={
                "verbose_name": "tag",
                "verbose_name_plural": "tags",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="TaggedItem",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("is_seed_data", models.BooleanField(default=False, editable=False)),
                ("is_deleted", models.BooleanField(default=False, editable=False)),
                ("object_id", models.PositiveIntegerField()),
                (
                    "content_type",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="contenttypes.contenttype",
                    ),
                ),
                (
                    "tag",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="tagged_items",
                        to="refs.tag",
                    ),
                ),
            ],
            options={
                "verbose_name": "tagged item",
                "verbose_name_plural": "tagged items",
                "indexes": [
                    models.Index(
                        fields=["content_type", "object_id"],
                        name="refs_tagged_content_9228fa_idx",
                    )
                ],
                "unique_together": {("tag", "content_type", "object_id")},
            },
        ),
    ]
