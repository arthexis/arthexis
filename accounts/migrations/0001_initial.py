# Generated by Django 5.2.4 on 2025-08-08 02:15

import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('phone_number', models.CharField(blank=True, help_text='Optional contact phone number', max_length=20)),
                ('has_charger', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Account',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('service_account', models.BooleanField(default=False, help_text='Allow transactions even when the balance is zero or negative')),
            ],
        ),
        migrations.CreateModel(
            name='Address',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('street', models.CharField(max_length=255)),
                ('number', models.CharField(max_length=20)),
                ('municipality', models.CharField(choices=[('Abasolo', 'Abasolo'), ('Acuña', 'Acuña'), ('Allende', 'Allende'), ('Arteaga', 'Arteaga'), ('Candela', 'Candela'), ('Castaños', 'Castaños'), ('Cuatro Ciénegas', 'Cuatro Ciénegas'), ('Escobedo', 'Escobedo'), ('Francisco I. Madero', 'Francisco I. Madero'), ('Frontera', 'Frontera'), ('General Cepeda', 'General Cepeda'), ('Guerrero', 'Guerrero'), ('Hidalgo', 'Hidalgo'), ('Jiménez', 'Jiménez'), ('Juárez', 'Juárez'), ('Lamadrid', 'Lamadrid'), ('Matamoros', 'Matamoros'), ('Monclova', 'Monclova'), ('Morelos', 'Morelos'), ('Múzquiz', 'Múzquiz'), ('Nadadores', 'Nadadores'), ('Nava', 'Nava'), ('Ocampo', 'Ocampo'), ('Parras', 'Parras'), ('Piedras Negras', 'Piedras Negras'), ('Progreso', 'Progreso'), ('Ramos Arizpe', 'Ramos Arizpe'), ('Sabinas', 'Sabinas'), ('Sacramento', 'Sacramento'), ('Saltillo', 'Saltillo'), ('San Buenaventura', 'San Buenaventura'), ('San Juan de Sabinas', 'San Juan de Sabinas'), ('San Pedro', 'San Pedro'), ('Sierra Mojada', 'Sierra Mojada'), ('Torreón', 'Torreón'), ('Viesca', 'Viesca'), ('Villa Unión', 'Villa Unión'), ('Zaragoza', 'Zaragoza'), ('Abasolo', 'Abasolo'), ('Agualeguas', 'Agualeguas'), ('Los Aldamas', 'Los Aldamas'), ('Allende', 'Allende'), ('Anáhuac', 'Anáhuac'), ('Apodaca', 'Apodaca'), ('Aramberri', 'Aramberri'), ('Bustamante', 'Bustamante'), ('Cadereyta Jiménez', 'Cadereyta Jiménez'), ('El Carmen', 'El Carmen'), ('Cerralvo', 'Cerralvo'), ('Ciénega de Flores', 'Ciénega de Flores'), ('China', 'China'), ('Doctor Arroyo', 'Doctor Arroyo'), ('Doctor Coss', 'Doctor Coss'), ('Doctor González', 'Doctor González'), ('Galeana', 'Galeana'), ('García', 'García'), ('General Bravo', 'General Bravo'), ('General Escobedo', 'General Escobedo'), ('General Terán', 'General Terán'), ('General Treviño', 'General Treviño'), ('General Zaragoza', 'General Zaragoza'), ('General Zuazua', 'General Zuazua'), ('Guadalupe', 'Guadalupe'), ('Los Herreras', 'Los Herreras'), ('Higueras', 'Higueras'), ('Hualahuises', 'Hualahuises'), ('Iturbide', 'Iturbide'), ('Juárez', 'Juárez'), ('Lampazos de Naranjo', 'Lampazos de Naranjo'), ('Linares', 'Linares'), ('Marín', 'Marín'), ('Melchor Ocampo', 'Melchor Ocampo'), ('Mier y Noriega', 'Mier y Noriega'), ('Mina', 'Mina'), ('Montemorelos', 'Montemorelos'), ('Monterrey', 'Monterrey'), ('Parás', 'Parás'), ('Pesquería', 'Pesquería'), ('Los Ramones', 'Los Ramones'), ('Rayones', 'Rayones'), ('Sabinas Hidalgo', 'Sabinas Hidalgo'), ('Salinas Victoria', 'Salinas Victoria'), ('San Nicolás de los Garza', 'San Nicolás de los Garza'), ('San Pedro Garza García', 'San Pedro Garza García'), ('Santa Catarina', 'Santa Catarina'), ('Santiago', 'Santiago'), ('Vallecillo', 'Vallecillo'), ('Villaldama', 'Villaldama'), ('Hidalgo', 'Hidalgo')], max_length=100)),
                ('state', models.CharField(choices=[('CO', 'Coahuila'), ('NL', 'Nuevo León')], max_length=2)),
                ('postal_code', models.CharField(max_length=10)),
            ],
        ),
        migrations.CreateModel(
            name='Credit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount_kwh', models.DecimalField(decimal_places=2, max_digits=10)),
                ('created_on', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True)),
                ('renewal_period', models.PositiveIntegerField(help_text='Renewal period in days')),
            ],
        ),
        migrations.CreateModel(
            name='RFID',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rfid', models.CharField(max_length=8, unique=True, validators=[django.core.validators.RegexValidator('^[0-9A-Fa-f]{8}$', message='RFID must be 8 hexadecimal digits')], verbose_name='RFID')),
                ('allowed', models.BooleanField(default=True)),
                ('added_on', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'RFID',
                'verbose_name_plural': 'RFIDs',
                'db_table': 'accounts_rfid',
            },
        ),
        migrations.CreateModel(
            name='Subscription',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_date', models.DateField(auto_now_add=True)),
                ('next_renewal', models.DateField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='Vehicle',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('brand', models.CharField(blank=True, max_length=100)),
                ('model', models.CharField(blank=True, max_length=100)),
                ('vin', models.CharField(max_length=17, unique=True, verbose_name='VIN')),
            ],
        ),
    ]
