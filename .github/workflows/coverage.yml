name: Coverage

on:
  schedule:
    - cron: '0 4 * * *'
  workflow_dispatch:

permissions:
  contents: write

jobs:
  coverage:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt pytest pytest-cov coverage-badge

      - name: Run tests with coverage
        id: pytest
        run: |
          set +e
          pytest --cov=. --cov-report=term-missing
          exit_code=$?
          echo "exit_code=${exit_code}" >> "$GITHUB_OUTPUT"
          if [ "$exit_code" -ne 0 ]; then
            {
              echo '### Pytest failures'
              echo
              echo "Pytest exited with status ${exit_code}."
            } >> "$GITHUB_STEP_SUMMARY"
          fi

      - name: Detect coverage data
        id: coverage-data
        run: |
          if [ -f ".coverage" ]; then
            echo "has_data=true" >> "$GITHUB_OUTPUT"
          else
            echo "has_data=false" >> "$GITHUB_OUTPUT"
          fi

      - name: Generate coverage reports
        if: steps.coverage-data.outputs.has_data == 'true'
        run: |
          coverage xml -o coverage.xml
          coverage report --skip-empty | tee coverage-report.txt

      - name: Publish coverage summary
        if: steps.coverage-data.outputs.has_data == 'true'
        run: |
          {
            echo '### Coverage summary'
            echo
            echo '```'
            cat coverage-report.txt
            echo '```'
          } >> "$GITHUB_STEP_SUMMARY"

      - name: Generate coverage badge
        if: steps.coverage-data.outputs.has_data == 'true'
        run: |
          coverage-badge -f -o coverage.svg

      - name: Verify coverage badge changes
        if: steps.coverage-data.outputs.has_data == 'true'
        id: verify-badge
        uses: tj-actions/verify-changed-files@v20
        with:
          files: coverage.svg

      - name: Commit coverage badge
        if: steps.verify-badge.outputs.files_changed == 'true'
        run: |
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git config --global user.name "github-actions[bot]"
          git add coverage.svg
          git commit -m "chore: update coverage badge"

      - name: Push coverage badge
        if: steps.verify-badge.outputs.files_changed == 'true'
        uses: ad-m/github-push-action@v0.8.0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ github.ref }}

      - name: Upload coverage artifacts
        if: steps.coverage-data.outputs.has_data == 'true'
        uses: actions/upload-artifact@v4
        with:
          name: coverage-reports
          path: |
            coverage.xml
            coverage-report.txt

      - name: Fail if tests failed
        if: steps.pytest.outputs.exit_code != '0'
        run: exit 1
