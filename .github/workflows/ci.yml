name: CI

on:
  push:
  pull_request:
  schedule:
    - cron: '0 2 * * *'

jobs:
  node-test-matrix:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.plan.outputs.matrix }}
      database_changed: ${{ steps.plan.outputs.database_changed }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: actions/setup-python@v4
        with:
          python-version: '3.x'
      - name: Build node test matrix
        id: plan
        run: |
          python scripts/build_node_ci_plan.py > plan.json
          python - <<'PY'
          import json
          import os

          with open('plan.json', 'r', encoding='utf-8') as fh:
              data = json.load(fh)

          matrix = json.dumps(data['matrix'])
          database_changed = 'true' if data.get('database_changed') else 'false'

          output = os.environ['GITHUB_OUTPUT']
          with open(output, 'a', encoding='utf-8') as fh:
              fh.write(f"matrix={matrix}\n")
              fh.write(f"database_changed={database_changed}\n")

          summary = os.environ.get('GITHUB_STEP_SUMMARY')
          if summary:
              with open(summary, 'a', encoding='utf-8') as fh:
                  fh.write('| Node role | Enabled features |\n')
                  fh.write('| --- | --- |\n')
                  for entry in data['matrix']:
                      features = entry['features'] or 'baseline only'
                      fh.write(f"| {entry['role']} | {features} |\n")
                  fh.write('\n')
          PY
  check-migrations:
    needs: node-test-matrix
    if: needs.node-test-matrix.outputs.database_changed == 'true'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v4
        with:
          python-version: '3.x'
      - name: Install dependencies
        run: |
          pip install -r requirements.txt
      - name: Check for missing migrations
        run: |
          python scripts/check_migrations.py

  env-refresh:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Run env refresh
        run: |
          # Intentionally avoid --clean so migrations run against existing data
          ./env-refresh.sh

